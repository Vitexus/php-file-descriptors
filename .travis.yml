language: php

## Cache composer bits
cache:
  directories:
    - $HOME/.composer/cache/files

# OS X required packages
addons:
  homebrew:
    packages:
      - php
      - composer

## Build matrix for lowest and highest possible targets
matrix:
  include:
    - php: 7.2
      env:
        - qaExtended=true
    - os: osx
      osx_image: xcode10.1
      language: generic
    - php: 7.3
    - php: nightly
      env:
        - dropPlatform=false
    - php: 7.2
      env:
        - dependencies=lowest
    - php: 7.3
      env:
        - dependencies=lowest
    - php: nightly
      env:
        - dependencies=lowest
        - dropPlatform=false
    - php: 7.2
      env:
        - dependencies=highest
    - os: osx
      osx_image: xcode10.1
      language: generic
      env:
        - dependencies=highest
    - php: 7.3
      env:
        - dependencies=highest
    - php: nightly
      env:
        - dependencies=highest
        - dropPlatform=false
    - name: "Windows"
      os: windows
      language: shell # no built-in php support
      before_install:
        - choco install php
        - choco install composer
        - export PATH="$(powershell -Command '("Process", "Machine" | % { [Environment]::GetEnvironmentVariable("PATH", $_) -Split ";" -Replace "\\$", "" } | Select -Unique | % { cygpath $_ }) -Join ":"')"
  allow_failures:
    - os: windows

## Install or update dependencies
install:
  - if [[ "${TRAVIS_OS_NAME}" != "osx"  ]]; then composer validate; fi;
  - if [[ -z "$dropPlatform" || "${TRAVIS_OS_NAME}" != "osx" ]]; then composer config --unset platform.php; fi;
  - if [[ -z "$qaExtended" || "${TRAVIS_OS_NAME}" != "osx" ]]; then phpenv config-rm xdebug.ini || :; fi;
  - php -v
  - if [ -z "$dependencies" ]; then composer install --prefer-dist; fi;
  - if [ "$dependencies" = "lowest" ]; then composer update --prefer-lowest --prefer-dist -n; fi;
  - if [ "$dependencies" = "highest" ]; then composer update --prefer-dist -n; fi;
  - composer show

## Run the actual test
script:
  - if [ -z "$qaExtended" ]; then make ci; fi;
  - if [ "$qaExtended" = "true" ]; then make ci-extended; fi;

## Gather coverage and set it to coverage servers
after_script: if [ "$qaExtended" = "true" ]; then make ci-coverage; fi;
